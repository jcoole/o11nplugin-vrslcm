<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>
	<artifactId>o11nplugin-vrslcm-package</artifactId>
	<packaging>package</packaging>

	<parent>
		<artifactId>vrslcm</artifactId>
		<groupId>com.sprockitconsulting.vrslcm.plugin</groupId>
		<version>0.3.2-SNAPSHOT</version>
	</parent>

	<properties>
		<!-- vCO packages are signed. Create your own JKS keystore that contains
		a key-pair under the alias _DunesRSA_Alias_ -->
		
		<!-- 
		To create your own keystore, do the following:
		* keytool -keystore sprockitpackage.keystore -genkey -alias _DunesRSA_Alias_ -keyalg rsa -validity 1536 -storetype JKS -storepass password123 -dname "CN=Sprockit Package Signing, OU=Lab, O=Sprockit Consulting, L=Seattle, ST=WA, C=US"
		
		Input the values that it asks you for.
		With the new keystore you'll have what you need to generate a CSR, and the private key.
		
		* keytool -keystore sprockitpackage.keystore -certreq -alias _DunesRSA_Alias_ -keyalg rsa -file sprockitpackagerequest.csr -storepass password123 -sigalg SHA256withRSA -keysize 2048
		Request and retrieve the signed certificate file.
		
		Import trusted CA certs to the keystore.
		* keytool -import -keystore sprockitpackage.keystore -file chain.cer -storepass password123 -trustcacerts
		
		Import to the keystore.
		* keytool -import -keystore mykeystore -file mycertificate.cer -alias _DunesRSA_Alias_
		
		Replace the values below to sign your packages on build.
		
		-->
		<keystoreLocation>sprockit.keystore</keystoreLocation>
		<keystorePassword>password123</keystorePassword>
	</properties>

	<build>
		<plugins>
			<plugin>
				<artifactId>exec-maven-plugin</artifactId>
				<version>3.0.0</version>
				<groupId>org.codehaus.mojo</groupId>
				<executions>
					<execution>
						<!-- Run vCO-CLI to pull the package contents prior to repackaging -->
						<id>Sync Content from Orchestrator</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>exec</goal>
						</goals>
						<configuration>
							<executable>java</executable>
							<arguments>
							<argument>-Dlog4j2.formatMsgNoLookups=true</argument>
							<argument>-DincludeConfigurationSecureStringValues=true</argument>
							<argument>-DignoreServerCertificate=true</argument>
							<argument>-DexportVersionHistory=false</argument>
							<argument>-DexactPackageNameMatch=true</argument>
							<argument>-Dusername=${orchestratorUser}</argument>
							<argument>-Dpassword=${orchestratorPass}</argument>
							<argument>-DserverHost=${orchestratorHost}</argument>
							<argument>-DserverPort=443</argument>
							<argument>-jar</argument>
							<argument>vco-cli-java-8.10.0.jar</argument>
							<argument>de</argument>
							<argument>${remotePackageName}</argument>
							<argument>${project.basedir}/src/main/resources</argument>
							</arguments>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>com.vmware.o11n.mojo.pkg</groupId>
				<artifactId>o11n-package-maven-plugin</artifactId>
				<version>${vco.version}</version>
				<extensions>true</extensions>
				<configuration>
					<packageName>com.sprockitconsulting.vrslcm.plugin</packageName>
					<!-- Set the local path to the *.vmokeystore file used to sign the content -->
					<keystoreLocation>${keystoreLocation}</keystoreLocation>
					<keystorePassword>${keystorePassword}</keystorePassword>
					<includes>
						<include>**/*.element_info.xml</include>
					</includes>
					<packageFileName>o11nplugin-vrslcm-package-${project.version}</packageFileName>
					<allowedMask>vef</allowedMask>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>
